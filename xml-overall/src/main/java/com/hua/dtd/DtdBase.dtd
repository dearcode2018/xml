


<!--

document type definition
 可以定义合法的xml文档构建模块
它使用一系列合法的元素来定义文档(xml)的结构

dtd 可以被成行地声明于xml文档中，也可以作为一个外部引用


  -->

<!-- 
文档声明

内部文档声明
dtd被包含在xml源文件中，通过下面的语法包装在一个DOCTYPE中
<!DOCTYPE 根元素 [元素声明]>

外部文档声明
<!DOCTYPE 根元素 SYSTEM|PUBLIC "dtd文件名">
或者通过引入外界的dtd文件来实现

 -->

<!-- 
使用dtd
1) 通过dtd，每个xml文件均可携带一个有关其自身格式的描述

2) 通过dtd，独立的团体可以一致地使用某个标准的dtd来交换数据

3) 通过dtd 来进行数据验证

 -->

<!-- 
xml文档构建模块

所有的xml文档以及html文档，均由以下简单的构建模块组成:
1) 元素 element
元素可以包含文本、其他元素或为空
元素为空 可以用 / 关闭
2) 属性 attribute


3) 实体 entity
实体是用来定义普通文本的变量，实体引用时对实体的引用.
例如, html的一个实体引用 &nbsp;
当文档被xml解析器解析时，实体就会展开.
以下实体在xml中被预定义:
&lt;(小于号) &gt;(大于号) &amp;(&号) &quot;(双引号) &apos;(单引号)

4) CDATA
character data 字符数据 - 不会被解析的字符数据
文本中的标签不会被当做标记来处理，实体也不会展开.

5) PCDATA
parsed character data 被解析的字符数据
文本中的标签会被当做标记来处理，而实体会被展开，但是文本中不应包含&<>字符，应该用其实体来替换它们.

CDATA 和 PCDATA 可以对同一文本进行切换.

 -->

<!-- 
声明元素

声明一个元素
<!ELEMENT 元素名称 类别>

或者

<!ELEMENT 元素名称 (元素内容) >

声明空元素
<!ELEMENT 元素名称 EMPTY>

声明只有PCDATA的元素
<!ELEMENT 元素名称 (#PCDATA)>

声明任何内容的元素
<!ELEMENT 元素名称 ANY>

声明带有子元素(序列)的元素
<!ELEMENT 元素名称 (子元素1, 子元素2, ...)>
注意 : 以上的子元素也必须按照顺序出现在后续的元素声明中


声明只出现一次的元素
<!ELEMENT 元素A (子元素1)> 子元素1只能出现一次，必须在元素A中出现

声明最少出现一次的元素
<!ELEMENT 元素名称(子元素+)>

声明出现0到多次的元素
<!ELEMENT 元素名称(子元素*)>

声明出现0或1次的元素
<!ELEMENT元素名称(子元素?)>

 -->

<!-- 
声明属性

声明一个属性
<!ATTLIST 元素名称 属性名称 属性类型 默认值>



<!ATTLIST 元素名称 属性名称 属性类型 (值可选列表||) 默认值>








 -->

<!-- 
实体声明
实体用于定义普通文本或特殊字符的快捷方式的变量.
实体可以在内部或外部进行声明

实体的值 : 用双引号括起来的字符串值

实体调用 : &实体名称; (3部分组成)

一个内部实体声明
<!ENTITY 实体名称 "实体的值">

一个实体外部声明
<!ENTITY 实体名称 SYSTEM "实体所在的dtd文件的地址">



 -->

<!--  -->

<!--  -->

<!--  -->

<!--  -->

<!--  -->

<!--  -->

<!--  -->

<!--  -->

<!--  -->

<!--  -->

<!--  -->









